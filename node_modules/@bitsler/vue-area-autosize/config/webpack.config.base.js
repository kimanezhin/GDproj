import webpack from 'webpack';
import OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin';
import TerserWebpackPlugin from 'terser-webpack-plugin';
import MiniCssExtractPlugin from 'mini-css-extract-plugin';
import VueLoaderPlugin from 'vue-loader/lib/plugin';
import config from '../package.json';

export default {
  mode: process.env.NODE_ENV,
  entry: './src/index.js',
  performance: {
    maxEntrypointSize: 1000 * 1024,
    hints: 'error'
  },
  resolve: {
    extensions: ['.wasm', '.mjs', '.js', '.json', '.vue', '.jsx', '.ts', '.tsx'],
  },
  optimization: {
    minimizer: [
      new TerserWebpackPlugin({
        parallel: true,
        cache: true,
        sourceMap: false,
        extractComments: {
          filename: 'LICENSES'
        },
        terserOptions: {
          output: {
            comments: /^\**!|@preserve|@license|@cc_on/
          }
        }
      }),
      new OptimizeCSSAssetsPlugin({})
    ]
  },
  module: {
    rules: [
      {
        enforce: 'pre',
        test: /\.(js|vue)$/,
        loader: 'eslint-loader',
        exclude: /node_modules/,
      },
      {
        test: /\.m?js$/,
        exclude: /(node_modules|bower_components)/,
        use: {
          loader: 'babel-loader'
        }
      },
      {
        test: /\.vue$/,
        loader: 'vue-loader',
        options: {
          loaders: {
            scss: [
              MiniCssExtractPlugin.loader,
              'css-loader',
              'sass-loader'
            ],
            css: [
              MiniCssExtractPlugin.loader,
              'css-loader'
            ]
          }
        }
      },
      {
        test: /\.s[a|c]ss$/,
        use: [
          MiniCssExtractPlugin.loader,
          'css-loader',
          'sass-loader'
        ]
      }
    ]
  },
  plugins: [
    new VueLoaderPlugin(),
    new MiniCssExtractPlugin({
      filename: '[contenthash].css',
      chunkFilename: '[id].css'
    }),
    new webpack.DefinePlugin({
      'VERSION': JSON.stringify(config.version),
    }),
  ],
  stats: 'normal'
};
